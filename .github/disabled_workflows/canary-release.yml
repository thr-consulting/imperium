name: Canary release workflow
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Canary release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup node 14.14
        uses: actions/setup-node@v2-beta
        with:
          node-version: "14.14"
          registry-url: "https://registry.npmjs.org"

      - name: Restore lerna node_modules
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn global add lerna
          yarn lerna bootstrap

      - name: Run build
        run: |
          yarn build

      - name: Run typescript
        run: |
          yarn ts

      - name: Publish canary
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPMRC: ${{ github.workspace }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "$NPMRC/.npmrc"
          yarn lerna publish patch -c --preid alpha --yes
# This doesn't use canary
#          yarn lerna publish prerelease -y --force-publish=* --no-push --no-git-tag-version --dist-tag alpha

      - name: Notify discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          bash ./tools/discordhook.sh
