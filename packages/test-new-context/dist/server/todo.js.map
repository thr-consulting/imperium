{"version":3,"sources":["../../src/server/todo.ts"],"names":["d","todoSeverModule","name","startup","server","context","Object","keys","resolvers","Query","someQuery","source","query","todoDomain","Todo","create","complete","title","schema"],"mappings":";;;;;;;;;AAAA;;AAGA,MAAMA,CAAC,GAAG,oBAAM,uCAAN,CAAV;AAEO,MAAMC,eAA6B,GAAG;AAC5CC,EAAAA,IAAI,EAAE,MADsC;;AAE5C,QAAMC,OAAN,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B;AAC9B;AACA;AAEA;AACAL,IAAAA,CAAC,CAAC,wDAAD,EAA2DM,MAAM,CAACC,IAAP,CAAYF,OAAZ,CAA3D,CAAD;AACA,GAR2C;;AAS5CG,EAAAA,SAAS,CAACJ,MAAD,EAAS;AACjB,WAAO;AACNK,MAAAA,KAAK,EAAE;AACNC,QAAAA,SAAS,CAACC,MAAD,EAASC,KAAT,EAAgBP,OAAhB,EAAyB;AACjC,iBAAOA,OAAO,CAACQ,UAAR,CAAmBR,OAAnB,CAA2BS,IAA3B,CAAgCC,MAAhC,CAAuC;AAACC,YAAAA,QAAQ,EAAE,IAAX;AAAiBC,YAAAA,KAAK,EAAE;AAAxB,WAAvC,EAAgHZ,OAAO,CAACQ,UAAxH,CAAP;AACA;;AAHK;AADD,KAAP;AAOA,GAjB2C;;AAkB5CK,EAAAA,MAAM,EAAG;;;;;;;;;AAlBmC,CAAtC","sourcesContent":["import debug from 'debug';\nimport type {ServerModule} from './index';\n\nconst d = debug('imperium.test-new-context.server.todo');\n\nexport const todoSeverModule: ServerModule = {\n\tname: 'Todo',\n\tasync startup(server, context) {\n\t\t// do whatever startup you need in here.\n\t\t// make sure you pass the correct context into your domain methods.\n\n\t\t// eslint-disable-next-line no-console\n\t\td(\"running todo's server module startup method. Contexts:\", Object.keys(context));\n\t},\n\tresolvers(server) {\n\t\treturn {\n\t\t\tQuery: {\n\t\t\t\tsomeQuery(source, query, context) {\n\t\t\t\t\treturn context.todoDomain.context.Todo.create({complete: true, title: 'finish ts for imperium graphql server module'}, context.todoDomain);\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n\tschema: `\n\t\t\ttype Todo {\n\t\t\t\ttitle: String\n\t\t\t\tcomplete: Boolean\n\t\t\t}\n\t\t\textend type Query {\n\t\t\t\tsomeQuery: Todo\n\t\t\t}\n\t\t`,\n};\n"],"file":"todo.js"}