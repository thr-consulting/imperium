// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint Config should match the config 1`] = `
Object {
  "env": Object {
    "commonjs": true,
    "es6": true,
    "jest/globals": true,
    "node": true,
  },
  "extends": Array [
    "airbnb-typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
  ],
  "globals": Object {
    "document": true,
    "process": false,
    "window": true,
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 2020,
    "sourceType": "module",
  },
  "plugins": Array [
    "jest",
    "react-hooks",
  ],
  "rules": Object {
    "@typescript-eslint/ban-ts-ignore": Array [
      "off",
    ],
    "@typescript-eslint/explicit-function-return-type": Array [
      "off",
      Object {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
      },
    ],
    "@typescript-eslint/explicit-member-accessibility": Array [
      "off",
    ],
    "@typescript-eslint/indent": Array [
      "off",
    ],
    "@typescript-eslint/interface-name-prefix": Array [
      "off",
    ],
    "@typescript-eslint/no-before-define": Array [
      "off",
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-expressions": Array [
      "off",
    ],
    "@typescript-eslint/no-unused-vars": Array [
      "error",
      Object {
        "argsIgnorePattern": "server|context|ctx|type",
        "varsIgnorePattern": "d",
      },
    ],
    "class-methods-use-this": "off",
    "global-require": "error",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-default": "off",
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "jsx-a11y/anchor-is-valid": "off",
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/label-has-for": "off",
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": true,
      },
    ],
    "no-console": Array [
      "error",
    ],
    "no-plusplus": "off",
    "no-return-assign": Array [
      "error",
      "except-parens",
    ],
    "no-underscore-dangle": Array [
      "warn",
      Object {
        "allow": Array [
          "_id",
        ],
        "allowAfterThis": true,
      },
    ],
    "no-unused-vars": Array [
      "error",
      Object {
        "argsIgnorePattern": "server|context|ctx|type",
        "varsIgnorePattern": "d",
      },
    ],
    "no-use-before-define": Array [
      "off",
    ],
    "prefer-arrow-callback": Array [
      "error",
      Object {
        "allowNamedFunctions": true,
      },
    ],
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/destructuring-assignment": Array [
      "off",
      "always",
    ],
    "react/display-name": Array [
      "off",
    ],
    "react/forbid-prop-types": "error",
    "react/jsx-curly-newline": Array [
      "off",
    ],
    "react/jsx-filename-extension": Array [
      "error",
      Object {
        "extensions": Array [
          ".tsx",
        ],
      },
    ],
    "react/jsx-indent": Array [
      "off",
    ],
    "react/jsx-indent-props": Array [
      "off",
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-props-no-spreading": Array [
      "off",
    ],
    "react/jsx-wrap-multilines": Array [
      "off",
    ],
    "react/no-children-prop": "off",
    "react/no-typos": "off",
    "react/no-unknown-property": Array [
      "error",
      Object {
        "ignore": Array [
          "for",
        ],
      },
    ],
    "react/no-unused-prop-types": "off",
    "react/prefer-stateless-function": "error",
    "react/require-default-props": "off",
  },
  "settings": Object {
    "react": Object {
      "version": "detect",
    },
  },
}
`;
